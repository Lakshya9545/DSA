
#include <iostream>
#include <array>//for the array
#include<vector>//for the vector

using namespace std;
int main()
{
    
    vector<int> v;//vector creation
    cout<<v.capacity()<<endl;//to check the vector (container size)or basically how much space is allocated to the vector
    v.push_back(1);//to insert element element ned to be wrote inside brackets 
    v.push_back(2);//to insert element element ned to be wrote inside brackets
    v.push_back(3);//to insert element element ned to be wrote inside brackets
    v.emplace_back(9);//same to inseert element but faster than push back 
    cout<<v.size()<<endl;//to check the size of the vector 
    cout<<v.at(0)<<endl;//to check element at index (whatever you wish)
    cout<<v.front()<<endl; // for front element 
    cout<<v.back()<<endl; // forback element 
    v.pop_back();//basically pops last element in the vector 
    v.clear();//to clear the vector
    
    vector<int>a(5,1)//here 5 denotes the size of the vector and 1 is the value which denotes all the values which are inside vector are going to be initialised by int16_t
    vector<int>a(5)// a container of size 5 with any garbage value 
    vector<int>a(b)//another vector exact copy of a (b is the copy of a)
    vector <int>::iterator it = v.begin();//basically it is pointing directly to the memory in the storage 
    
    it++//moving to next location
    vector <int>::iterator it = v.rend();//point at the reversed end basicalllly at the first location 
    vector <int>::iterator it = v.rbegin();//point at the reversed begin basicalllly at the last location 
    
    
    //loops in vector 
    
    for(vector <int>::iterator it = v.begin();it!= v.end();it++ ){
        cout<<*it<< " ";//basically whatever work you want to do with the fore loop 
    }
    
    //to earase o delete a portion in an vector 
    v.erase(v.begin()+2 /* //start */,v.begin()+4 /*end*/ )
    v.insert(v.begin()+2 /* //location */,300 /*value which you want to insert */ )
    
    return 0;
}